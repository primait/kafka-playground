version: "3"

services:
  elixir_brod:
    build:
      context: elixir_brod
    volumes:
      - ./elixir_brod/:/code
    depends_on:
      redpanda:
        condition: service_healthy
    environment:
      SOURCE: one
      DESTINATION: one
  redpanda:
    image: redpandadata/redpanda:v22.3.20
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --memory 1G
      - --reserve-memory 0M
      - --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://redpanda:29092,OUTSIDE://kafka:9092
      - --pandaproxy-addr 0.0.0.0:8082
      - --advertise-pandaproxy-addr localhost:8082
    volumes:
      - redpanda-data:/var/lib/redpanda/data
    ports:
      - "8081:8081"
      - "8082:8082"
      - "9092:9092"
      - "29092:29092"
    healthcheck:
      test: ["CMD", "curl", "--fail", "localhost:9644/v1/status/ready"]
      interval: 1s
      timeout: 1s
      retries: 3
    networks:
      default:
        aliases:
          - kafka
          - schema-registry
    restart: unless-stopped

  console:
    image: redpandadata/console:v2.2.4
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:29092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      - redpanda

  # confluent:
  #   image: confluentinc/confluent-local:7.5.1
  #   ports:
  #     - "8081:8081"
  #     - "8082:8082"
  #     - "9092:9092"

  # kafka-ui:
  #   image: provectuslabs/kafka-ui
  #   container_name: kafka-ui
  #   depends_on:
  #     - confluent
  #   ports:
  #     - "8080:8080"
  #   restart: always
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: confluent:9092
  #     KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://confluent:8081

  # kafka-manager:
  #   image: sheepkiller/kafka-manager:1.3.1.8
  #   ports:
  #     - "9000:9000"
  #   depends_on:
  #     - broker
  #     - schema-registry
  #   environment:
  #     ZK_HOSTS: zookeeper:2181
  #     APPLICATION_SECRET: letmein
  #     KM_ARGS: -Djava.net.preferIPv4Stack=true
  #   networks:
  #     - default

volumes:
  redpanda-data:

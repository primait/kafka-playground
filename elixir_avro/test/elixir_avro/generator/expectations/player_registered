defmodule My.Fantastic.App.Atp.Players.PlayerRegistered do
  @moduledoc """
  DO NOT EDIT MANUALLY: This module was automatically generated from an AVRO schema.

  A new player is registered in the atp ranking system.

  Fields:

    `player_id`: The unique identifier of the registered player (UUID).

    `full_name`: The full name of the registered player.

    `rank`: The current ranking of the registered player, start counting from 1.

    `registration_date`: The date when the player was registered (number of UTC days
      from the unix epoch).

    `sponsor_name`: The name of the current sponsor (optional).

    `trainer`: Current trainer.

  """

  use TypedStruct

  typedstruct do
    field :player_id, String.t(), enforce: true
    field :full_name, String.t(), enforce: true
    field :rank, integer(), enforce: true
    field :registration_date, Date.t(), enforce: true
    field :sponsor_name, nil | String.t(), enforce: false
    field :trainer, My.Fantastic.App.Atp.Players.Trainer.t(), enforce: true
  end

  def to_avro_map(%__MODULE__{} = r) do
    %{
      "player_id" => r.player_id,
      "full_name" => r.full_name,
      "rank" => r.rank,
      "registration_date" => ElixirAvro.Generator.Types.Date.encode_value!(r.registration_date),
      "sponsor_name" => r.sponsor_name,
      "trainer" => ElixirAvro.Generator.Types.Record.encode_value!(r.trainer, "atp.players.Trainer")
    }
  end
end
